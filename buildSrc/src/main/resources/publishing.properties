# <---------------->
# <-- Publishing -->
# <---------------->
# The display name format of versions published to CurseForge and Modrinth.
versionDisplayFormat = ${mod_id}-${mod_version}

# This project's release type on CurseForge and/or Modrinth
# Allowed types: release, beta, alpha
release_type = release
publish_with_changelog = ${{ it.file('CHANGELOG.md').exists() }}



# <---------------->
# <-- CurseForge -->
# <---------------->
# Publishing to CurseForge (Provide secret: CURSEFORGE_TOKEN)
# The project's numeric ID on CurseForge. You can find this in the About Project box.
# Leave this empty if you don't want to publish on CurseForge.
curseforge_project_id =

# The project's relations on CurseForge. You can use this to refer to other projects on CurseForge.
# Syntax: type1:name1;type2:name2;...
# Where type can be one of [requiredDependency, embeddedLibrary, optionalDependency, tool, incompatible],
#       and the name is the CurseForge project slug of the other mod.
# Example: requiredDependency:railcraft;embeddedLibrary:cofhlib;incompatible:buildcraft
curseforge_relations =

# Enabling debug will not upload the file, but will go through all other steps and log appropriately
curseforge_debug = false



# <-------------->
# <-- Modrinth -->
# <-------------->
# Publishing to Modrinth (Provide secret: MODRINTH_TOKEN), the token must have the `CREATE_VERSION` and `PROJECT_WRITE` permissions
# The project's ID on Modrinth. Can be either the slug or the ID.
# Leave this empty if you don't want to publish on Modrinth.
modrinth_project_id =

# The project's relations on Modrinth. You can use this to refer to other projects on Modrinth.
# Syntax: scope1-type1:name1;scope2-type2:name2;...
# Where scope can be one of [required, optional, incompatible, embedded],
#       type can be one of [project, version],
#       and the name is the Modrinth project or version slug/id of the other mod.
# Example: required-project:jei;optional-project:top;incompatible-project:gregtech
modrinth_relations =

# Enabling debug will not upload the file, but will go through all other steps and log appropriately
modrinth_debug = false



# <---------------->
# <-- Maven Repo -->
# <---------------->
# Maven Publishing (Provide secret: MAVEN_USER, MAVEN_PASS)
publish_to_maven = true

# Good for debugging artifacts before uploading to remote maven
# GitHub actions won't run if this is true, test this by running the task `publishToMavenLocal`
publish_to_local_maven = false
maven_name = ${mod_id}
maven_url = https://maven.ender-development.org
